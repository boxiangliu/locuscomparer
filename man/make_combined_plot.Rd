% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locuscompare.R
\name{make_combined_plot}
\alias{make_combined_plot}
\title{Generated a combined plot with two locuszoom plots and a locuscompare
plot. Each locuszoom plot represent an association study.}
\usage{
make_combined_plot(
  merged,
  title1,
  title2,
  ld,
  chr,
  snp = NULL,
  combine = TRUE,
  legend = TRUE,
  legend_position = c("bottomright", "topright", "topleft"),
  lz_ylab_linebreak = FALSE,
  genome = "hg19"
)
}
\arguments{
\item{merged}{(data.frame) An input data.frame which has the following
columns: rsid, pval1 (p-value for study 1), logp1 (p-value for study 2),
logp1 (log p-value for study 1), logp2 (log p-value for study 2), chr, pos.
See the example for `get_lead_snp()` on how to generate this data.frame.}

\item{title1}{(string) The title for the x-axis.}

\item{title2}{(string) The title for the y-axis.}

\item{ld}{(data.frame) The output from `retrieve_LD()`.}

\item{chr}{(string) Chromosome name. e.g. '22'. Notice that the name should not contain 'chr'.}

\item{snp}{(string, optional) SNP rsID. If NULL, the function will select the lead SNP. Default: NULL.}

\item{combine}{(boolean, optional) Should the three plots be combined into one plot? If FALSE, a list of
three plots will be returned. Default: TRUE.}

\item{legend}{(boolean, optional) Should the legend be shown? Default: TRUE.}

\item{legend_position}{(string, optional) Either 'bottomright','topright', or 'topleft'. Default: 'bottomright'.}

\item{lz_ylab_linebreak}{(boolean, optional) Whether to break the line of y-axis of the locuszoom plot.}

\item{genome}{character(1) for get_position
If FALSE, the y-axis title and '-log10(p-value)'. will be on the same line. Default: FALSE.}
}
\description{
Generated a combined plot with two locuszoom plots and a locuscompare
plot. Each locuszoom plot represent an association study.
}
\examples{
in_fn_1 = system.file('extdata', 'gwas.tsv', package = 'locuscomparer')
d1 = read_metal(in_fn_1, marker_col = 'rsid', pval_col = 'pval')
in_fn_2 = system.file('extdata', 'eqtl.tsv', package = 'locuscomparer')
d2 = read_metal(in_fn_2, marker_col = 'rsid', pval_col = 'pval')
merged = merge(d1, d2, by = "rsid", suffixes = c("1", "2"), all = FALSE)
snp = 'rs9349379'
merged = add_label(merged, snp)
chr = '6' 
ld = retrieve_LD(chr, snp, "AFR")
make_combined_plot(merged, 'GWAS', 'eQTL', ld, chr)
}
